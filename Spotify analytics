# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

SELECT * FROM BIT_DB.Spotifydata

#Then I came up with the following questions to explore the data:
#1. What is the average danceability by artist and track?

SELECT artist_name, track_name, AVG(danceability) as avg_danceability

FROM BIT_DB.Spotifydata

GROUP BY artist_name

#2. Who are the top 10 artists based on popularity?

SELECT *

FROM BIT_DB.Spotifydata

ORDER BY popularity DESC

LIMIT 10;


#3. What artist released the longest song?

SELECT artist_name, track_name, duration_ms

FROM BIT_DB.Spotifydata

ORDER BY duration_ms DESC

LIMIT 1; 

#4. What's the average danceability for the 10 most popular songs?

SELECT popularity, AVG(danceability) as avg_danceability

FROM BIT_DB.Spotifydata

ORDER BY popularity DESC

LIMIT 10;

#5. What popular songs have a low danceability score?

SELECT * FROM BIT_DB.Spotifydata 

WHERE popularity >80 and danceability <0.500;

#6. What songs were sung by BTS only?

SELECT * FROM BIT_DB.Spotifydata 

WHERE artist_name = 'BTS'

#7. Which artists have multiple songs on the list?

SELECT artist_name

FROM BIT_DB.Spotifydata

GROUP BY artist_name

HAVING COUNT(*) > 1; 
